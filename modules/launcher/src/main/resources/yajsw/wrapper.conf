#********************************************************************
# working directory
#********************************************************************
wrapper.working.dir=${message_broker_home}\\
# Java Main class.
# YAJSW: default is "org.rzo.yajsw.app.WrapperJVMMain"
# DO NOT SET THIS PROPERTY UNLESS YOU HAVE YOUR OWN IMPLEMENTATION
# wrapper.java.mainclass=
#********************************************************************
# tmp folder
# yajsw creates temporary files named in_.. out_.. err_.. jna..
# per default these are placed in jna.tmpdir.
# jna.tmpdir is set in setenv batch file to <yajsw>/tmp
#********************************************************************
wrapper.tmp.path = ${jna_tmpdir}
#********************************************************************
# Application main class or native executable
# One of the following properties MUST be defined
#********************************************************************
# Java Application main class
wrapper.java.app.mainclass=io.ballerina.messaging.broker.Main
# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO
# Log file to use for wrapper output logging.
wrapper.logfile=${wrapper_home}\/log\/wrapper.log
# Format of output for the log file.  (See docs for formats)
#wrapper.logfile.format=LPTM
# Log Level for log file output.  (See docs for log levels)
#wrapper.logfile.loglevel=INFO
# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling by size.  May abbreviate with the 'k' (kB) or
#  'm' (mB) suffix.  For example: 10m = 10 megabytes.
# If wrapper.logfile does not contain the string ROLLNUM it will be automatically added as suffix of the file name
wrapper.logfile.maxsize=10m
# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=10
# Title to use when running as a console
wrapper.console.title="MessageBroker"
#********************************************************************
# Wrapper Windows Service and Posix Daemon Properties
#********************************************************************
# Name of the service
wrapper.ntservice.name="MessageBroker"
# Display name of the service
wrapper.ntservice.displayname="Ballerina Message Broker"
# Description of the service
wrapper.ntservice.description="MB"
#********************************************************************
# Wrapper System Tray Properties
#********************************************************************
# enable system tray
wrapper.tray = false
# TCP/IP port. If none is defined multicast discovery is used to find the port
# Set the port in case multicast is not possible.
#wrapper.tray.port = 15002
#********************************************************************
# Exit Code Properties
# Restart on non zero exit code
#********************************************************************
wrapper.on_exit.0=SHUTDOWN
wrapper.on_exit.default=RESTART
#********************************************************************
# Trigger actions on console output
#********************************************************************
# On Exception show message in system tray
wrapper.filter.trigger.0=Exception
#wrapper.filter.script.0=scripts\/trayMessage.gv
wrapper.filter.script.0.args=Exception
#********************************************************************
# genConfig: further Properties generated by genConfig
#********************************************************************
placeHolderSoGenPropsComeHere=
wrapper.java.command = ${java_home}\\bin\\java
wrapper.java.classpath = ${message_broker_home}\\lib\\*.jar
wrapper.app.parameter = io.ballerina.messaging.broker.Main
wrapper.java.additional.1 = -Xbootclasspath\/a:${message_broker_home}\\lib\\*.jar
wrapper.java.additional.2 = -Xms256m 
wrapper.java.additional.3 = -Xmx1024m 
wrapper.java.additional.4 = -XX:+HeapDumpOnOutOfMemoryError
wrapper.java.additional.5 = -XX:HeapDumpPath=${message_broker_home}\\heap-dump.hprof 
wrapper.java.additional.6 = -Dmessage.broker.home=${message_broker_home} 
wrapper.java.additional.7 = -Djava.command=${java_home}\\bin\\java
wrapper.java.additional.8 = -Dlog4j.configuration=file:${message_broker_home}\\conf\\log4j.properties
wrapper.java.additional.9 = -Dbroker.config=${message_broker_home}\\conf\\broker.yaml 
wrapper.java.additional.10 = -Dbroker.users.config=${message_broker_home}\\conf\\security\\users.yaml
wrapper.java.additional.11 = -Dbroker.classpath=${message_broker_home}\\lib\\*
wrapper.java.additional.12 = -Dfile.encoding=UTF8
wrapper.java.additional.13 = -Dorg.apache.jasper.compiler.Parser.STRICT_QUOTE_ESCAPING=false
