swagger: '2.0'
info:
  version: 1.0.0
  title: Broker AMQP API
  description: Message Broker AMQP Connection Management API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
schemes:
  - https
securityDefinitions:
  basicAuth:
    type: basic

# Apply to the whole API
security:
  - basicAuth: []
basePath: /broker/v1.0/transports/amqp/
produces:
  - application/json
paths:
  /connections:
      get:
        operationId: getAllConnections
        summary: Get all connections
        description: Retrieves all connections to the broker
        produces:
          - application/json
        responses:
          '200':
            description: List of active Connections
            schema:
              type: array
              items:
                $ref: '#/definitions/ConnectionMetadata'
          '400':
            $ref: "#/responses/BadRequest"
          '401':
            $ref: "#/responses/NotAuthenticated"
          '403':
            $ref: "#/responses/Unauthorized"
  /connections/{id}:
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Identifier of the connection
      delete:
        operationId: closeConnection
        summary: Close the specified connection.
        description: >-
          Disconnects the specified amqp connection if the connection exists in the broker
        parameters:
          - in: query
            name: force
            type: boolean
            required: false
            default: false
            description: >-
              If set to true the broker will close the underlying connection without trying to communicate with the
              connected AMQP client. If set to false, the broker will send a connection close frame to the client and the
              connection will be closed when the client responds back with a connection close ok.
          - in: query
            name: used
            type: boolean
            required: false
            default: false
            description: >-
              If set to false, the broker will close the connection only if there are no AMQP channels registered on
              it. If set to true, the connection will be closed regardless of the registered number of channels.
        produces:
          - application/json
        responses:
          '202':
            description: Connection removal request submitted.
            schema:
              $ref: '#/definitions/CloseConnectionResponse'
          '400':
            $ref: "#/responses/BadRequest"
          '401':
            $ref: "#/responses/NotAuthenticated"
          '403':
            $ref: "#/responses/Unauthorized"
          '404':
            $ref: "#/responses/NotFound"
  /connections/{connectionId}/channels/{channelId}:
    parameters:
      - in: path
        name: connectionId
        type: integer
        required: true
        description: Identifier of the connection
    delete:
        operationId: closeChannel
        summary: Force disconnect the specified channel.
        description: >-
          Disconnects the specified amqp channel if an active channel exists in the broker
        parameters:
          - in: path
            name: channelId
            type: integer
            required: true
            description: Identifier of the channel
          - in: query
            name: used
            type: boolean
            required: false
            default: false
            description: >-
              If set to false, the broker will close the channel only if there are no AMQP consumers for it. If set to
              true, the channel will be closed regardless of the number of active consumers.
        produces:
          - application/json
        responses:
          '202':
            description: Channel removal request submitted.
            schema:
              $ref: '#/definitions/RequestAcceptedResponse'
          '400':
            description: Bad request. Invalid request or validation error.
            schema:
              $ref: '#/definitions/Error'
          '401':
            $ref: "#/responses/NotAuthenticated"
          '403':
            $ref: "#/responses/Unauthorized"
          '404':
            $ref: "#/responses/NotFound"
  /connections/{connectionId}/channels:
        parameters:
          - in: path
            name: connectionId
            type: integer
            required: true
            description: Identifier of the connection
        get:
          operationId: getAllChannelsForConnection
          summary: Get all channels for connection
          description: >-
            Retrieves all AMQP channels established on an AMQP connection
          produces:
            - application/json
          responses:
            '200':
              description: List of channels created on the connection
              schema:
                type: array
                items:
                  $ref: '#/definitions/ChannelMetadata'
            '400':
              $ref: "#/responses/BadRequest"
            '401':
              $ref: "#/responses/NotAuthenticated"
            '403':
              $ref: "#/responses/Unauthorized"
            '404':
              $ref: "#/responses/NotFound"
responses:
  BadRequest:
    description: Bad request. Invalid request or validation error.
    schema:
      $ref: '#/definitions/Error'
  NotFound:
    description: The specified resource was not found
    schema:
      $ref: '#/definitions/Error'
  Unauthorized:
    description: User is not autherized to perform operation
    headers:
      WWW_Authenticate:
        type: string
    schema:
      $ref: '#/definitions/Error'
  NotAuthenticated:
    description: Authentication information is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
    schema:
      $ref: '#/definitions/Error'
definitions:
  ConnectionMetadata:
      title: Connection Metadata
      type: object
      required:
        - id
        - remoteAddress
        - channelCount
        - connectedTime
      properties:
        id:
          type: integer
          description: Connection identifier
        remoteAddress:
          type: string
          description: >-
            The ip address of the connected client. This could be the same
            for multiple connections.
        channelCount:
          type: integer
          description: Number of active channels registered for each connection
        connectedTime:
          type: integer
          format: int64
          description: The time at which the connection was established
  RequestAcceptedResponse:
        title: Connection Close Response
        type: object
        required:
          - message
        properties:
          message:
            type: string
            description: Response message with status of the connection close operation.
  ChannelMetadata:
        title: Channel Metadata
        type: object
        required:
          - id
          - remoteAddress
          - channelCount
          - connectedTime
        properties:
          id:
            type: integer
            description: Channel identifier
          consumerCount:
            type: integer
            description: Number of active consumers created on the channel
          createdTime:
            type: integer
            format: int64
            description: The time at which the channel was created
          isClosed:
            type: boolean
            description: Is the channel closed
          unackedMessageCount:
            type: integer
            description: Unacknowledged message count
          isFlowEnabled:
            type: boolean
            description: Is flow enabled in the channel
          deliveryPendingMessageCount:
            type: integer
            description: Number of messages to be delivered
          transactionType:
            type: string
            description: Underlying transaction type that is being used
          prefetchCount:
            type: integer
            description: The number of messages that will be prefetched
  Error:
      title: Error Response
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
          description: Error message.
  CloseConnectionResponse:
      title: Force Close Connection Response
      type: object
      required:
        - numberOfChannelsRegistered
      properties:
        numberOfChannelsRegistered:
          type: integer
          description: Response message with number of channels closed.